trigger:
  - main

variables:
  azureSubscription: 'Azure subscription 1 (0b406d1e-4714-4508-9e56-cdb4885278c1)'
  webAppName: 'project02'
  vmImageName: 'ubuntu-latest'
  artifactName: 'drop'

stages:
  - stage: BuildStage
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        displayName: 'Build Job'
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: npm cache clean --force
            displayName: 'Clean npm cache'

          - script: |
              rm -rf node_modules package-lock.json
            displayName: 'Remove node_modules and package-lock.json'

          - task: Npm@1
            displayName: 'Install frontend dependencies'
            inputs:
              command: 'install'
              workingDir: 'client'

          - task: Npm@1
            displayName: 'Install backend dependencies'
            inputs:
              command: 'install'
              workingDir: '.'

          - task: Npm@1
            displayName: 'Build frontend'
            inputs:
              command: 'custom'
              workingDir: 'client'
              customCommand: 'run build'

          - task: CopyFiles@2
            displayName: 'Copy frontend and backend files'
            inputs:
              Contents: |
                client/build/**
                **/*.js
                **/*.json
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
              replaceExistingArchive: true

          - publish: '$(Build.ArtifactStagingDirectory)/app.zip'
            artifact: $(artifactName)

  - stage: DeployStage
    displayName: 'Deploy Stage'
    dependsOn: BuildStage
    jobs:
      - deployment: DeployJob
        displayName: 'Deploy Job'
        environment: 'production'
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: $(artifactName)

                - task: AzureRmWebAppDeployment@5
                  displayName: 'Deploy to Azure Web App'
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: $(azureSubscription)
                    appType: 'webAppLinux'
                    WebAppName: $(webAppName)
                    packageForLinux: '$(Pipeline.Workspace)/$(artifactName)/app.zip'
                    DeploymentTypeLinux: 'zipDeploy'
                    StartupCommand: 'npm start'
