trigger:
  - main

variables:
  buildConfiguration: 'Release'
  nodeVersion: '20.x'
  appName: 'project02'
  resourceGroup: 'project01'

stages:
  - stage: BuildStage
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        displayName: 'Build Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '$(nodeVersion)'
            displayName: 'Install Node.js'

          - script: |
              npm install
            displayName: 'Install backend dependencies'

          - script: |
              cd client
              npm install
              npm run build
            displayName: 'Build frontend'

          - script: |
              mkdir -p deploy
              cp -r client/build deploy/client
              cp -r * deploy/
              rm -rf deploy/client/node_modules
              rm -rf deploy/node_modules
            displayName: 'Prepare deployment package'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: 'deploy'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
              replaceExistingArchive: true
            displayName: 'Archive deployment package'

          - publish: '$(Build.ArtifactStagingDirectory)/app.zip'
            artifact: 'drop'

  - stage: DeployStage
    displayName: 'Deploy Stage'
    dependsOn: BuildStage
    jobs:
      - deployment: DeployJob
        displayName: 'Deploy Job'
        environment: 'production'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - task: AzureRmWebAppDeployment@5
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'Azure subscription 1 (0b406d1e-4714-4508-9e56-cdb4885278c1)'
                    appType: 'webAppLinux'
                    WebAppName: '$(appName)'
                    packageForLinux: '$(Pipeline.Workspace)/drop/app.zip'
                    DeploymentTypeLinux: 'zipDeploy'
                    StartupCommand: 'npm start'
