trigger:
- main

variables:
  ConnectedServiceName: '7db58dc2-0e21-495d-98b8-b3b56513efd3'
  WebAppKind: 'webAppLinux'
  WebAppName: 'project01'
  StartupCommand: 'npm start'

stages:

# --------------------- CI Stage ---------------------
- stage: Build
  displayName: Build React and Node.js App
  jobs:
  - job: BuildJob
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'client'
      displayName: 'Install client dependencies'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'server'
      displayName: 'Install server dependencies'

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'client'
        customCommand: 'run build'
      displayName: 'Build React App'

    - task: CopyFiles@2
      inputs:
        Contents: |
          client/build/**
          server/**
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy Build Output'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        replaceExistingArchive: true
      displayName: 'Archive Build to ZIP'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/app.zip'
        ArtifactName: 'release'
        publishLocation: 'Container'
      displayName: 'Publish Artifact (app.zip)'

# --------------------- CD Stage ---------------------
- stage: Deploy
  displayName: Deploy to Azure Web App
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJob
    displayName: Deploy Application
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: release
            displayName: 'Download Build Artifact'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Azure App Service'
            inputs:
              azureSubscription: '$(ConnectedServiceName)'
              appType: '$(WebAppKind)'
              WebAppName: '$(WebAppName)'
              packageForLinux: '$(Pipeline.Workspace)/release/app.zip'
              StartupCommand: '$(StartupCommand)'
