trigger:
  - main

stages:
  - stage: BuildStage
    jobs:
      - job: BuildJob
        pool:
          vmImage: ubuntu-latest
        steps:
          # Install Node.js
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          # Clean npm cache and remove node_modules
          - script: |
              npm cache clean --force
              rm -rf node_modules package-lock.json
            displayName: 'Clean npm cache and remove node_modules'

          # Install backend dependencies
          - task: Npm@1
            displayName: 'Install backend dependencies'
            inputs:
              command: 'install'
              workingDir: '.'

          # Install frontend dependencies
          - task: Npm@1
            displayName: 'Install frontend dependencies'
            inputs:
              command: 'install'
              workingDir: 'client'

          # Build React app
          - task: Npm@1
            displayName: 'Build React app'
            inputs:
              command: 'custom'
              workingDir: 'client'
              customCommand: 'run build'

          # Move React build to backend's public directory
          - script: |
              rm -rf public
              mv client/build public
            displayName: 'Move React build to backend public directory'

          # Archive the entire project (backend + frontend build)
          - task: ArchiveFiles@2
            displayName: 'Archive project files'
            inputs:
              rootFolderOrFile: '.'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/project.zip'
              replaceExistingArchive: true

          # Publish the archived project
          - task: PublishPipelineArtifact@1
            displayName: 'Publish project artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/project.zip'
              artifact: 'drop'

  - stage: DeployStage
    dependsOn: BuildStage
    jobs:
      - job: DeployJob
        pool:
          vmImage: ubuntu-latest
        steps:
          # Download the project artifact
          - task: DownloadPipelineArtifact@2
            displayName: 'Download project artifact'
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)'

          # Deploy to Azure Web App
          - task: AzureRmWebAppDeployment@5
            displayName: 'Deploy to Azure Web App'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure subscription 1 (0b406d1e-4714-4508-9e56-cdb4885278c1)'
              appType: 'webAppLinux'
              WebAppName: 'project01'
              packageForLinux: '$(Pipeline.Workspace)/project.zip'
              DeploymentTypeLinux: 'zipDeploy'
