trigger:
- main

variables:
  ConnectedServiceName: '7db58dc2-0e21-495d-98b8-b3b56513efd3'
  WebAppKind: 'webAppLinux'
  WebAppName: 'project01'
  StartupCommand: 'npm start'

stages:

# CI: Build and publish artifacts
- stage: Build
  displayName: Build React and Node.js
  jobs:
  - job: BuildJob
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'client'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'server'

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'client'
        customCommand: 'run build'

    - task: CopyFiles@2
      inputs:
        Contents: |
          client/build/**
          server/**
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'release'
        publishLocation: 'Container'

# CD: Deploy to Azure App Service
- stage: Deploy
  displayName: Deploy to Azure Web App
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJob
    displayName: Deploy App
    environment: 'production' # Optional - creates a visual environment in DevOps
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: release

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Azure App Service'
            inputs:
              azureSubscription: '$(ConnectedServiceName)'
              appType: '$(WebAppKind)'
              WebAppName: '$(WebAppName)'
              packageForLinux: '$(Pipeline.Workspace)/release'
              StartupCommand: '$(StartupCommand)'
